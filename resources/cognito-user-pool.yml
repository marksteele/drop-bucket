Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: ${self:custom.cognitoUserPool}
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      LambdaConfig:
        PostConfirmation: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage, self:provider.stage}-disable_user"
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: ${self:custom.stage}-user-pool-client
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false
  UserPoolLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      Principal: cognito-idp.amazonaws.com
      FunctionName: "${self:service}-${opt:stage, self:provider.stage}-disable_user"
      SourceArn: "arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/*"

# Print out the Id of the User Pool that is created
Outputs:
  UserPoolId:
    Value:
      "Ref": CognitoUserPool
  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient
