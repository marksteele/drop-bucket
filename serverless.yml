service: drop-bucket

plugins:
  - serverless-offline
  - serverless-finch # static site to s3 deployment
  - serverless-plugin-optimize
  - serverless-stack-output
  - serverless-pseudo-parameters

package:
  individually: true

custom:
  stage: ${opt:stage, self:provider.stage}
  client: # for serverless-finch
    bucketName: ${self:custom.stage}-${self:service}-ui
    distributionFolder: client/build
    errorDocument: index.html
  avDefsBucketName: ${self:custom.stage}-${self:service}-av-defs
  fileBucketName: ${self:custom.stage}-${self:service}-files
  dynamoDbTableName: ${self:custom.stage}-${self:service}-shared-files
  dynamoDbTableToIdx: ${self:custom.stage}-${self:service}-shared-files-to-idx
  dynamoDbTableFromIdx: ${self:custom.stage}-${self:service}-shared-files-from-idx
  cognitoUserPool: ${self:custom.stage}-user-pool
  output:
    handler: scripts/output.process

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  environment:
    CLAMAV_BUCKET_NAME: ${self:custom.avDefsBucketName}
    FILE_BUCKET_NAME: ${self:custom.fileBucketName}
    DYNAMODB_TABLE_NAME: ${self:custom.dynamoDbTableName}
    DYNAMODB_TABLE_TO_IDX: ${self:custom.stage}-${self:service}-shared-files-to-idx
    DYNAMODB_TABLE_FROM_IDX: ${self:custom.stage}-${self:service}-shared-files-from-idx
    COGNITO_IDENTITY_POOL_ID: "/ctrl-alt-del/drop-bucket/COGNITO_IDENTITY_POOL_ID"
    ADMIN_EMAIL: "mark@control-alt-del.org"
    WEBSITE_URL: "https://dropbucket.control-alt-del.org"
    SHARE_PATH: "/share"
  iamRoleStatements: ## TODO: Split these out to be function specific...
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource:
        - "Fn::GetAtt": [ FileBucket, Arn ]
    - Effect: Allow
      Action:
        - s3:*
      Resource:
         Fn::Join:
          - ""
          -
            - "Fn::GetAtt": [ FileBucket, Arn ]
            - "/*"
    - Effect: Allow
      Action:
        - s3:ListBucket
      Resource:
        - "Fn::GetAtt": [ VirusDefsBucket, Arn ]
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        Fn::Join:
          - ""
          -
            - "Fn::GetAtt": [ VirusDefsBucket, Arn ]
            - "/*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ FileSharingTable, Arn ]
    - Effect: Allow
      Action:
        - cognito-idp:AdminGetUser
        - cognito-idp:AdminDisableUser
      Resource:
        - "Fn::GetAtt": [ CognitoUserPool, Arn ]
    - Effect: Allow
      Action:
        - ssm:DescribeParameters
        - ssm:GetParameters
      Resource: "arn:aws:ssm:${opt:region, self:provider.region}:*:parameter/drop-bucket/*"
    - Effect: "Allow"
      Action:
        - "ses:SendEmail"
      Resource: "*"
functions:
  list:
    handler: list.list
    events:
      - http:
          path: /
          method: get
          cors: true
          authorizer: aws_iam
  disable_user:
    handler: user.disable
  clam_scan:
    timeout: 600
    memory: 3008
    optimize:
      includePaths:
        - av/bin/clamscan
        - av/bin/libclamav.so.9
        - av/bin/libclammspack.so.0
        - av/bin/libjson-c.so.2
        - av/bin/libjson.so.0
        - av/bin/libpcre2-8.so.0
        - av/bin/libpcre2-posix.so.1
        - av/bin/libltdl.so.7
    handler: clam.scan
  av_defs_updater:
    timeout: 600
    optimize:
      includePaths:
        - av/bin/freshclam
        - av/bin/libclamav.so.9
        - av/bin/libclammspack.so.0
        - av/bin/libjson-c.so.2
        - av/bin/libjson.so.0
        - av/bin/libpcre2-8.so.0
        - av/bin/libpcre2-posix.so.1
        - av/bin/libltdl.so.7
        - av/etc/freshclam.conf
    handler: freshclam.update
    events:
      - schedule: cron(0 12 * * ? *)

resources:
  - ${file(resources/general.yml)}
  - ${file(resources/s3-bucket.yml)}
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
  - ${file(resources/dynamodb.yml)}


    
